handler: handler.invoices
package:
   artifact: ./sitesearch-api.zip
environment: ${file(./sls/${opt:stage}.yml)}
events:
      - schedule:
            name: ${opt:stage}-invoices-api-warmer
            rate: cron(0/10 5-23 * * ? *)
            enabled: true
            input:
                request: {}
      - http:
             name: ${opt:stage}-invoices
             path: /invoices
             method: get
             cors:
               origins:
                 - '*'
               headers:
                 - Content-Type
                 - X-Amz-Date
                 - X-Api-Key
                 - X-Amz-Security-Token
               methods:
                 - GET
                 - OPTIONS
             integration: lambda
             request:
                 parameters:
                   querystrings:
                     customerid : true
                 passThrough: WHEN_NO_TEMPLATES
                 template:
                   application/json: '
                                          #set($allParams = $input.params())
                                          {
                                            "request": $input.body,
                                            "params" : {
                                              #foreach($type in $allParams.keySet())
                                              #set($params = $allParams.get($type))
                                              "$type" : {
                                                #foreach($paramName in $params.keySet())
                                                "$paramName" : "$util.escapeJavaScript($params.get($paramName))"
                                                #if($foreach.hasNext),#end
                                                #end
                                              }
                                              #if($foreach.hasNext),#end
                                              #end
                                            }
                                          }
                                      '
             response:
                 headers:
                   Content-Type: "'application/json'"
                 statusCodes:
                   200:
                     pattern: '' # Default response method
                   500:
                     pattern: '.*internalerror:.*'
                     template:
                       application/json: "$input.path('$.errorMessage')"
